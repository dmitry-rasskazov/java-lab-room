package com.company.timus;

import java.io.*;

public class Hieroglyph
{
    private static InputStream console = new BufferedInputStream(System.in, 1024);

    private static OutputStream printer = new BufferedOutputStream(System.out, 512);

    private static final short LENGTH = 'z' - 'a' + 1;

    public static void main(String[] args) throws IOException {

        int[] result = new int[LENGTH];

        short n = (short) nextInt();
        byte index;

        for (short i = 0; i < n; i++) {
            result[nextSymbolByte() - 'a'] |= (1 << (nextSymbolByte() - 'a'));
        }

        index = (byte) (nextSymbolByte() - 'a');
        for (short i = 0; i <= 25; i++) {
            if ((result[index] & (1 << i)) != 0) {
                printer.write(index + 'a');
                printer.write(i + 'a');
                printer.write('\n');
            }
        }

        printer.write('\n');
        printer.flush();

        console.close();
        printer.close();
    }

    private static int nextInt() throws IOException {
        int result = 0;
        short buf;
        boolean captured = false;
        while ((buf = (short) console.read()) != -1) {
            if(buf >= '0' && buf <= '9') {
                captured = true;
                result = ((result * 10) + (buf - '0'));
            } else if(captured && (buf == ' ' || buf == '\n')) {
                break;
            }
        }

        return result;
    }

    private static byte nextSymbolByte() throws IOException {
        byte buf;
        if((buf = (byte) console.read()) != -1) {
            if(buf >= 'a' && buf <= 'z') {
                return buf;
            } else {
                return nextSymbolByte();
            }
        } else {
            throw new IOException();
        }
    }
}

/**
 * 1545. Иероглифы
 * Ограничение времени: 1.0 секунды
 * Ограничение памяти: 64 МБ
 * Вове очень нравится аниме. Он настолько увлекся этим творчеством, что даже научился сносно общаться со своими японскими друзьями на их родном языке. Но вот при электронной переписке Вове до сих пор приходится пользоваться латиницей. Он хочет сразу печатать иероглифы со своей клавиатуры. Сергей, его товарищ по команде, написал маленькое приложение, позволяющее писать иероглифы, набирая при этом на клавиатуре латинские символы. Для этого, так как иероглифов значительно больше, чем букв латинского алфавита, Сергей создал специальный справочник, в котором каждый иероглиф представляется в виде последовательности из двух строчных букв латинского алфавита. Как только программка осознаёт, что набрана последовательность латинских букв, соответствующая некоторому иероглифу, то эта последовательность заменяется соответствующим иероглифом.
 * Когда Вова стал работать с программкой Сергея, ему быстро надоело заглядывать в справочник соответствия комбинаций букв и иероглифов за подсказкой. Помогите Сергею доработать свою программку, чтобы при вводе некоторой латинской буквы на экране автоматически отображалась подсказка, помогающая продолжить ее до корректного иероглифа.
 * Исходные данные
 * В первой строке находится количество иероглифов в справочнике Сергея N (1 ≤ N ≤ 1000). В следующих N строках содержатся последовательности латинских символов из справочника, соответствующие японским иероглифам, по одной последовательности в строке. Каждая такая последовательность состоит из двух строчных букв латинского алфавита. В следующей строке содержится введенная Вовой буква.
 * Результат
 * Выведите список иероглифов из справочника, которые начинаются на введенный Вовой символ, по одному в строке в любом порядке. Если таких иероглифов нет, то ничего выводить не надо.
 * Пример
 * исходные данные	результат
 *
 * 6
 * na
 * no
 * ni
 * ki
 * ka
 * ku
 * k
 *
 *
 *
 * ka
 * ki
 * ku
 */