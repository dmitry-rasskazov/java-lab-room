package com.company.timus;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class WeddingLunch {
    public static void main(String[] args) throws IOException {
        BufferedReader console = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(console.readLine());
        String plus = "+one";
        int result = 2;

        for(int i = 0; i < N; i++) {
            result += console.readLine().contains(plus) ? 2 : 1;
        }

        if(result == 13) {
            System.out.print(1400);
        } else {
            System.out.print(result * 100);
        }
    }
}

/**
 * 2100. Свадебный обед
 * Ограничение времени: 1.0 секунды
 * Ограничение памяти: 64 МБ
 * Маршалл и Лили женятся! Они отослали всем друзьям приглашения на свадьбу. На каждом приглашении можно отметить +one — это значит, что друг хочет прийти со своей парой (не из числа приглашённых). Все друзья ответили на приглашения, и теперь Лили хочет узнать, на сколько гостей организовывать обед в ресторане. Все гости будут сидеть за одним большим столом. Маршалл очень суеверный, поэтому если за столом окажутся ровно 13 человек (включая Маршалла и Лили), то Лили попросит сотрудников ресторана посадить манекен и обслуживать его наравне со всеми. Сколько же потратит молодая пара на этот обед, если обслуживание одного человека (или манекена) стоит $100?
 * Исходные данные
 * В первой строке вводится одно целое число n — количество друзей Маршалла и Лили, которым они отослали приглашение (1 ≤ n ≤ 20).
 * Затем в n строках описываются ответы на приглашения. Каждый ответ имеет вид name[+one]. Это имя приглашённого друга и +one, если друг отметил этот вариант. Гарантируется, что длина каждого имени не превосходит 20, и каждое имя состоит только из букв латинского алфавита.
 * Результат
 * Выведите одно целое число — стоимость обеда в долларах.
 */