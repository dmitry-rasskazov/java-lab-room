package com.company.timus;

import java.util.Scanner;

public class FineTime
{
    public static void main(String[] args) {
        Scanner console = new Scanner(System.in);
        int T1 = console.nextInt(), T2 = console.nextInt();

        console.nextLine();
        for(byte i = 0; i < 10; i++)
        {
            T1 += console.nextInt() * 20;
        }

        if(T1 <= T2 ) {
            System.out.println("No chance.");
        } else {
            System.out.println("Dirty debug :(");
        }
    }
}


/**
 * 1636. Штрафное время
 * Ограничение времени: 1.0 секунды
 * Ограничение памяти: 64 МБ
 * Команду ZZZ вновь постигла неудача. На очередном соревновании в городе Екатеринозаводске участники выступили блестяще, первыми решив все 10 предложенных задач ещё до заморозки монитора. Однако в итоговом протоколе команда ZZZ оказалась лишь на втором месте, проиграв команде QXX по штрафному времени. Участник команды QXX предположил, что это произошло из-за неаккуратности участников и применяемой ими техники грязной отладки. Однако капитан ZZZ заявил, что во всём виновата хитрая командная тактика, поскольку даже если бы команда сдавала все задачи с первой попытки, она всё равно заняла бы только второе место. Выясните, кто из них прав.
 * Исходные данные
 * В первой строке через пробел записаны числа T1 и T2 — штрафное время в минутах команды QXX и команды ZZZ соответственно (250 ≤ T1 ≤ T2 ≤ 2400). Во второй строке через пробел записаны 10 чисел — i-е число обозначает количество штрафных попыток, сделанных командой ZZZ по i-й задаче. Напомним, что каждая штрафная попытка прибавляет к штрафному времени 20 минут.
 * Результат
 * Если штрафные попытки не повлияли на итоговое место команды ZZZ, выведите «No chance.». Иначе выведите «Dirty debug :(». При равенстве штрафного времени команды сортируются по алфавиту, а значит, команда ZZZ в этом случае всё равно оказалась бы на втором месте.
 * Примеры
 * исходные данные	результат
 *
 * 290 420
 * 0 0 0 2 1 0 2 0 1 0
 *
 *
 *
 * No chance.
 *
 * 300 719
 * 0 0 0 0 0 0 21 0 0 0
 *
 *
 *
 * Dirty debug :(
 */